

exports.login= function(user ,users , socket){

	var jsonobj = JSON.parse(user);
				var isAuth = 0;
				var username = jsonobj.username;
				var password = jsonobj.password; 
				
				console.log("json string is "+jsonobj);
				// check if user exists
				console.log("logged in user is "+username + " Password "+password);
				users.find({
					 $and:[
						 {"username":username},
						 {"password":password} 
					      ]}
					   ).limit(1).toArray( function(error , result){
					console.log("username is "+jsonobj.username);
					if(error){
						throw error;
					}else{
						
						console.log(result.length);
						if(result.length != 0){//user exists hence log in the user .
							console.log("User found");						
							console.log(result);
							// load backup....
							 
							// var obj = result[0];
							 //var GrNumber = obj._id;
							 //console.log("Gr Number is :"+GrNumber);
							 
							 var finalObj = {};// final json obj which will store all data backup.
							 
							/* finalObj["Contents"] = allFieldsString;
							 console.log("Currently FinalObj contains :"+finalObj);
							 
							 for(var k=0 ; k< allFields.length ; k++){
							 
							 //	getBackup(finalObj ,allFields[k] ,GrNumber ,allFieldsString[k], k ,allFields.length);
							 
							 
							 }*/
							
							
							isAuth = 1;
						}else{ // user doesnot exists 
							console.log("No corresponding account found , please signup first");
							isAuth = 0;
							
						}
						socket.emit('loginResult' , isAuth );
						if(isAuth == 1){
							console.log("Emitting socket now ...");
							socket.emit('JSON', result);
						}
					
					}

				});
				
				
		

}


				
		function getBackup(finalObj, collectionName , GrNumber , key, index, lastIndex){
		
			console.log("Loop "+index+" Getting backup for collectionName :"+collectionName +" and GrNumber :"+GrNumber +" key is "+key);
			console.log("Current status of final obj is "+finalObj);
			
			// get Backup
			
			var cursor = collectionName.find( {_id: GrNumber} ).limit(1);
			
			cursor.each(function (err, doc) {

     			if (doc != null) {
            			console.log(doc);
            			finalObj[key] = doc;
            			
            			// check if index equals last index, then emit a socket
            			
            			if(index == lastIndex){
            			
            			//socket.emit('AllBackup' , finalObj);
            			console.log("Emmitting socket...");
            			
            			// emit socket..
            			
            			
            			}
            			
            			

        		}else{
        		
        			console.log("No corresponding entry found for key :"+key);
        			
        		} 
		
		});// end of cursor
		
	}//end of function

			
